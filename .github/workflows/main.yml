name: CI

on:
  push:
    branches: [ main, ci-netbsd, ci-netbsd-docker ]
  pull_request:

jobs:
  version:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        container: ["fedora:37", "fedora:38", "ubuntu:jammy"]
    steps:
      - name: Check container sha tags
        run: |
          docker pull "${{ matrix.container }}"
          docker inspect "${{ matrix.container }}" --format=${{ '{{.RepoDigests}}{{.Created}}' }}


  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - container: fedora:37
            ucd_dir: /usr/share/unicode/ucd
          - container: fedora:38
            ucd_dir: /usr/share/unicode/ucd
          - container: ubuntu:jammy
            ucd_dir: /usr/share/unicode

    container:
      image: ${{ matrix.container }}

    steps:
      - name: Install distro packages
        env:
         # For autogen.sh
         UBUNTU_PACKAGES_AUTOGEN: >
           autopoint
           strace
           wget
         # For make from
         # https://packages.ubuntu.com/search?searchon=sourcenames&keywords=ibus
         UBUNTU_PACKAGES_MAKE: >
           desktop-file-utils
           dbus-x11
           gobject-introspection
           gtk-doc-tools
           iso-codes
           libdconf-dev
           libgirepository1.0-dev
           libglib2.0-dev
           libgtk-3-bin
           libgtk-3-dev
           libgtk2.0-dev
           libnotify-dev
           libtool
           libwayland-dev
           python-gi-dev
           python3-all
           systemd
           unicode-cldr-core
           unicode-data
           valac
         FEDORA_PACKAGES_MAKE: >
           gettext-devel
           libtool
           gtk2-devel
           gtk3-devel
           gtk4-devel
           dbus-glib-devel
           dbus-python-devel
           desktop-file-utils
           gtk-doc
           dconf-devel
           dbus-x11
           python3-devel
           python3-gobject
           git
           vala
           iso-codes-devel
           libnotify-devel
           wayland-devel
           cldr-emoji-annotation
           unicode-emoji
           unicode-ucd
           systemd
         # for gtkdoc-fixxref
         FEDORA_PACKAGES_GTKDOC: >
           glib2-doc
         # for ibus-keypress
         FEDORA_PACKAGES_CI_KEY: >
           libXtst-devel
         # for gcc -fanalyzer -fsanitize=address -fsanitize=leak options
         # xkeyboard-config-devel to make ibus/engine/simle.xml.in
         FEDORA_PACKAGES_DISTRO: >
           libasan
           xkeyboard-config-devel
           patch
           strace
           wget

        run: |
          case "${{ matrix.container }}" in
          ubuntu*)
            cat /etc/lsb-release
            echo "apt-get update -qq -y"
            apt-get update -qq -y
            echo "apt-get install -q -y git"
            apt-get install -q -y git
            PACKAGES=$(echo "$UBUNTU_PACKAGES_AUTOGEN" | tr -d '\n')
            PACKAGES=$(echo "$PACKAGES $UBUNTU_PACKAGES_MAKE" | tr -d '\n')
            echo "apt-get install -y $PACKAGES"
            apt-get install -y $PACKAGES
            dpkg -l | grep unicode-data
            ;;
          fedora*)
            cat /etc/fedora-release
            echo "dnf -y update"
            dnf -y update
            echo "dnf -y install git which"
            dnf -y install git which
            PACKAGES=$(echo "$FEDORA_PACKAGES_MAKE" | tr -d '\n')
            PACKAGES=$(echo "$PACKAGES $FEDORA_PACKAGES_GTKDOC" | tr -d '\n')
            PACKAGES=$(echo "$PACKAGES $FEDORA_PACKAGES_CI_KEY" | tr -d '\n')
            PACKAGES=$(echo "$PACKAGES $FEDORA_PACKAGES_DISTRO" | tr -d '\n')
            echo "dnf -y install $PACKAGES"
            dnf -y install $PACKAGES
            ;;
          *)
            echo "Not supported ${{ matrix.container }}"
            ls /etc/*release
            cat /etc/*release
            exit 1
            ;;
          esac
          pwd
          echo $GITHUB_WORKSPACE
          ls -a

      - uses: actions/checkout@v2
        with:
          #repository: ibus/ibus
          fetch-depth: 200

      - name: Fetch git tags
        run: |
          pwd
          id
          ls -al
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git branch
          git fetch --prune --unshallow --tags
          echo $PATH

      # https://github.com/orgs/community/discussions/39646
      # Heard GTK fixes this issue recently
      - name: Apply additional patches for GitHub action + Docker
        run: |
          wget -O ibus-xx-bus-docker-spawn.patch https://github.com/fujiwarat/ibus/commit/d7d9247f517dbee97be551555f6abda3aa57dd39.patch
          patch -p1 < ./ibus-xx-bus-docker-spawn.patch

      - name: Run autogen
        # configure options from
        # https://salsa.debian.org/debian/ibus/-/blob/master/debian/rules
        run: >
          ./autogen.sh
          --enable-gtk-doc
          --with-python=/usr/bin/python3
          --with-ucd-dir=${{ matrix.ucd_dir }}
          --enable-install-tests

      - name: Run make
        # Set the cutom DESTDIR because the default DESTDIR
        # /home/travis/bulid/fujiwarat/$PKG/ibus/ibus-$VERSION/_inst seems to
        # be too long and failed to set DESTDIR to install
        # bindings/pygobject/IBus.py
        run: >
          export DISABLE_DAEMONIZE_IN_TESTS=1;
          make distcheck
          DISTCHECK_CONFIGURE_FLAGS="
          --enable-gtk-doc
          --disable-schemas-install
          --enable-memconf
          --with-python=/usr/bin/python3
          --with-ucd-dir=${{ matrix.ucd_dir }}
          --enable-install-tests
          "
          DISABLE_GUI_TESTS="
          ibus-compose ibus-keypress test-stress xkb-latin-layouts
          "
          VERBOSE=1
          DESTDIR="$HOME/build/$USER/dest"


  build-netbsd-docker:
    name: "build (NetBSD/amd64 9.3 with pkgsrc on docker)"
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          #repository: ibus/ibus
          fetch-depth: 200

      - name: Setup NetBSD docker
        run: |
          uname -a
          touch docker.log
          /usr/bin/docker pull madworx/netbsd:latest
          /usr/bin/docker image inspect madworx/netbsd:latest
          ssh-keygen -f ~/.ssh/id_rsa-docker -N ""
          cat > ~/.ssh/config <<'EOF'
          Host localhost
            IdentityFile ~/.ssh/id_rsa-docker
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
          EOF
          echo 'Starting NetBSD in docker VM...'
          /usr/bin/docker run --rm --privileged -e "SSH_PUBKEY=$(cat ~/.ssh/id_rsa-docker.pub)" -p 2222:22 madworx/netbsd:latest >> docker.log &
          echo 'Waiting booting NetBSD to multiuser...'
          tail -f docker.log &
          while true; do if grep -q -m 1 "NetBSD/amd64 (netbsd) (constty)" docker.log; then break; else sleep 1; fi; done
          echo 'Ready.'

      - name: Setup environment
        run: |
          ssh -p 2222 root@localhost sh << 'EOF'
          set -o xtrace
          . /root/.profile
          uname -a
          mount -u -o nfsv2 /
          ftp -o - http://cdn.NetBSD.org/pub/NetBSD/NetBSD-`uname -r`/amd64/binary/sets/comp.tar.xz | tar -C / -zxpf - ./usr/bin ./usr/include ./usr/lib ./usr/libexec ./usr/sbin ./usr/share
          ftp -o - http://cdn.NetBSD.org/pub/NetBSD/NetBSD-`uname -r`/amd64/binary/sets/xbase.tar.xz | tar -C / -zxpf - ./usr/X11R7/bin ./usr/X11R7/include ./usr/X11R7/lib ./usr/X11R7/share
          ftp -o - http://cdn.NetBSD.org/pub/NetBSD/NetBSD-`uname -r`/amd64/binary/sets/xcomp.tar.xz | tar -C / -zxpf - ./usr/X11R7/include ./usr/X11R7/lib ./usr/X11R7/share
          export PKG_PATH=http://cdn.netbsd.org/pub/pkgsrc/packages/NetBSD/amd64/9.3/All
          pkg_add -u pkgconf autoconf automake libtool-base intltool gmake
          pkg_add -u cldr-emoji-annotation unicode-character-database unicode-emoji
          pkg_add -u py39-gobject3 glib2 dconf gettext-tools gobject-introspection gettext-lib hicolor-icon-theme vala dbus libnotify iso-codes gtk2+ gtk3+
          pkg_add -u glib2-tools gtk-doc gdbus-codegen git-base
          /usr/pkg/sbin/mozilla-rootcerts install
          EOF

      - name: Fetch git tags
        run: |
          ssh -p 2222 root@localhost sh << 'EOF'
          set -o xtrace
          . /root/.profile
          git clone https://github.com/ibus/ibus ~/ibus
          git config --global --add safe.directory ~/ibus
          cd ~/ibus
          git fetch --prune --unshallow --tags
          pwd
          id
          ls -al
          EOF

      - name: Run autogen
        run: |
          ssh -p 2222 root@localhost sh << 'EOF'
          set -o xtrace
          . /root/.profile
          cd ~/ibus
          MAKE=gmake \
          MSGFMT=/usr/pkg/bin/msgfmt \
          LDFLAGS="-L/usr/pkg/lib -Wl,-R/usr/pkg/lib -L/usr/lib -Wl,-R/usr/lib -L/usr/X11R7/lib -Wl,-R/usr/X11R7/lib" \
          ./autogen.sh \
          --sysconfdir=/usr/pkg/etc \
          --localedir=/usr/pkg/share/locale \
          --enable-dconf \
          --enable-gtk2 \
          --enable-gtk3 \
          --enable-surrounding-text \
          --enable-introspection=yes \
          --disable-systemd-services \
          --with-python=/usr/pkg/bin/python3.9 \
          --with-unicode-emoji-dir=/usr/pkg/share/unicode/emoji \
          --with-emoji-annotation-dir=/usr/pkg/share/unicode/cldr/common/annotations \
          --with-ucd-dir=/usr/pkg/share/unicode/ucd \
          --x-includes=/usr/X11R7/include \
          --x-libraries=/usr/X11R7/lib \
          --prefix=/usr/pkg \
          --mandir=/usr/pkg/man \
          --enable-option-checking=yes \
          --enable-gtk-doc \
          --enable-install-tests
          EOF

      - name: Run make
        run: |
          ssh -p 2222 root@localhost sh << 'EOF'
          set -o xtrace
          . /root/.profile
          cd ~/ibus
          export DISABLE_DAEMONIZE_IN_TESTS=1
          gmake distcheck \
          LDFLAGS="-L/usr/pkg/lib -Wl,-R/usr/pkg/lib -L/usr/lib -Wl,-R/usr/lib -L/usr/X11R7/lib -Wl,-R/usr/X11R7/lib" \
          DISTCHECK_CONFIGURE_FLAGS=" \
          MAKE=\"gmake\" \
          MSGFMT=\"/usr/pkg/bin/msgfmt\" \
          --enable-gtk-doc \
          --disable-schemas-compile \
          --enable-memconf \
          --sysconfdir=/usr/pkg/etc \
          --localedir=/usr/pkg/share/locale \
          --enable-dconf \
          --enable-gtk2 \
          --enable-gtk3 \
          --enable-surrounding-text \
          --enable-introspection=yes \
          --disable-systemd-services \
          --with-python=/usr/pkg/bin/python3.9 \
          --with-unicode-emoji-dir=/usr/pkg/share/unicode/emoji \
          --with-emoji-annotation-dir=/usr/pkg/share/unicode/cldr/common/annotations \
          --with-ucd-dir=/usr/pkg/share/unicode/ucd \
          --x-includes=/usr/X11R7/include \
          --x-libraries=/usr/X11R7/lib \
          --prefix=/usr/pkg \
          --mandir=/usr/pkg/man \
          --enable-install-tests \
          " \
          DISABLE_GUI_TESTS=" \
          ibus-compose ibus-keypress test-stress xkb-latin-layouts \
          " \
          VERBOSE=1
          EOF
